name: Movie Picture Backend CI

on:
  pull_request:
    branches:
      - main
    path:
      - '../../starter/backend/**'
  
  workflow_dispatch:

defaults:
  run:
    working-directory: ./starter/backend 


jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from repository
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.6'

      - name: Install pipenv
        run: pip install pipenv

      - name: Cache Pipenv
        uses: actions/cache@v3
        with:
          path: |
            ~/.pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: pipenv install --dev

      - name: Run the linter.
        run: pipenv run lint


  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code from Repository
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.6'

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install

      - name: Run tests
        run:  pipenv run test

  build:
    runs-on: ubuntu-latest
    needs: [lint, test]
    steps:
      - name: Checkout code from Repository
        uses: actions/checkout@v3

      - name: Set up Python3
        uses: actions/setup-python@v5
        with:
          python-version: '3.10.6'
      - name:  Build Backend Docker Image
        run:  docker build --tag movie-pipeline-backend:latest .

      - name: Check if image is created
        run: docker images|grep movie-pipeline-backend

      - name: Run docker image
        run:  docker run --name movie-pipeline-backend -p 3000:3000 -d movie-pipeline-backend
    
      - name:  Check if  application runs
        run:  curl http://localhost:5000/movies

      - name: Install pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: pipenv install

      - name: Run tests
        run:  pipenv run test

